/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project.crypto;

import java.io.File;
import java.io.FileOutputStream;
import java.net.Authenticator;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.text.SimpleDateFormat;
import java.util.Base64;
import java.util.Date;
import java.util.Properties;
import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.*;
import javax.mail.internet.*;
/**
 *
 * @author lenovo
 */
public class genrate_privateandpublic extends javax.swing.JFrame {

    /**
     * Creates new form genrate_privateandpublic
     */
    public genrate_privateandpublic() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        output = new javax.swing.JLabel();
        genratePublic = new javax.swing.JButton();
        close = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Genrate Public/Private");

        output.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        output.setForeground(new java.awt.Color(255, 0, 51));

        genratePublic.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        genratePublic.setText("Genrate Public and Private Key");
        genratePublic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genratePublicActionPerformed(evt);
            }
        });

        close.setText("Close");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(genratePublic)
                .addGap(77, 77, 77))
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(output, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(301, 301, 301)
                .addComponent(close, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(97, Short.MAX_VALUE)
                .addComponent(genratePublic, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(output, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(close, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void genratePublicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genratePublicActionPerformed
    try{
        KeyPairGenerator keyGen = KeyPairGenerator.getInstance("RSA");
		keyGen.initialize(2048); // use a key size of 2048 bits
		KeyPair keyPair = keyGen.generateKeyPair();
		PrivateKey privKey = keyPair.getPrivate();
		PublicKey pubKey = keyPair.getPublic();
                File publicKeyFile = new File("C:\\Users\\lenovo\\Desktop\\project\\public_key\\"+appendDate("public_key")+".key");
                 File privateKeyFile = new File("C:\\Users\\lenovo\\Desktop\\project\\private_key\\"+appendDate("private_key")+".key");
      byte[] encodedpublicKey = pubKey.getEncoded();
       byte[] encodedprivateKey = privKey.getEncoded();
    FileOutputStream publicKeyFileout = new FileOutputStream(publicKeyFile);
        FileOutputStream privateKeyFileout = new FileOutputStream(privateKeyFile);
    publicKeyFileout.write(encodedpublicKey);
    privateKeyFileout.write(encodedprivateKey);
    publicKeyFileout.close();
     privateKeyFileout.close();
     
sendemail(publicKeyFile.getAbsolutePath());
    }
       catch(Exception e){
           System.out.println(e);
       }
    }//GEN-LAST:event_genratePublicActionPerformed

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
       this.dispose();
    }//GEN-LAST:event_closeActionPerformed
	public  String appendDate(String fileName) {
		StringBuilder sb = new StringBuilder();
		sb.append(fileName);
                sb.append("-");
		Date d = new Date();
		SimpleDateFormat formatter=new SimpleDateFormat("dd-MM-yyyy hh:mm:ss");  
		String date = formatter.format(d);
		sb.append(date.split("-")[0]);
		sb.append(date.split("-")[1]);
		sb.append(date.split("-")[2].split(" ")[0]);
		sb.append(date.split(" ")[1].split(":")[0]);
		sb.append(date.split(" ")[1].split(":")[1]);
		sb.append(date.split(" ")[1].split(":")[2]);
		return sb.toString();
	}
         public void sendemail(String filepath) {
try{
	    Properties properties=new Properties();
	    properties.put("mail.smtp.auth", "true");
	    properties.put("mail.smtp.starttls.enable", "true");
	    properties.put("mail.smtp.host", "smtp.gmail.com");
	    properties.put("mail.smtp.port", "587");
	    String myAccountEmail="email@gmail.com";
	    String password="pass";
	    Session session=Session.getInstance(properties, new  javax.mail.Authenticator() {
                @Override
	        protected PasswordAuthentication getPasswordAuthentication() {
	            return new PasswordAuthentication(myAccountEmail, password);
	        }
	    });
	    
	    Message message=prepareMessage(session,myAccountEmail,"email@gmail.com",filepath);
	    Transport.send(message);
            output.setText("Email Sent successfully");
}
catch(Exception e){
    System.out.println(e);
}
	}

	private  Message prepareMessage(Session session,String from,String to,String filepath) {
	    Message message = new MimeMessage(session);
	    try {
	        
	        message.setFrom(new InternetAddress(from));
	        message.setRecipient(Message.RecipientType.TO, new InternetAddress(to));
	        message.setSubject("Public Key");
                Multipart multipart = new MimeMultipart();
		BodyPart bodyPart = new MimeBodyPart();
		bodyPart.setText("Find attach public key");
			multipart.addBodyPart(bodyPart);
			MimeBodyPart mimeBodyPart = new MimeBodyPart();
			mimeBodyPart.attachFile(new File(filepath));
			multipart.addBodyPart(mimeBodyPart);

			message.setContent(multipart);


	        return message;
	    } catch (AddressException e) {
	        e.printStackTrace();
	    } catch (Exception e) {
	        e.printStackTrace();
	    }
	    return null;
	}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(genrate_privateandpublic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(genrate_privateandpublic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(genrate_privateandpublic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(genrate_privateandpublic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new genrate_privateandpublic().setVisible(true);
            }
        });
    }
public String publicKeygenrated;
public String privateKeygenrated;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton close;
    private javax.swing.JButton genratePublic;
    private javax.swing.JLabel output;
    // End of variables declaration//GEN-END:variables
}
